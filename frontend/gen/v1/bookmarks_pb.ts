// @generated by protoc-gen-es v1.1.0 with parameter "target=ts,import_extension="
// @generated from file v1/bookmarks.proto (package v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message v1.AddBookmarkRequest
 */
export class AddBookmarkRequest extends Message<AddBookmarkRequest> {
  constructor(data?: PartialMessage<AddBookmarkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.AddBookmarkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBookmarkRequest {
    return new AddBookmarkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBookmarkRequest {
    return new AddBookmarkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBookmarkRequest {
    return new AddBookmarkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddBookmarkRequest | PlainMessage<AddBookmarkRequest> | undefined, b: AddBookmarkRequest | PlainMessage<AddBookmarkRequest> | undefined): boolean {
    return proto3.util.equals(AddBookmarkRequest, a, b);
  }
}

/**
 * @generated from message v1.AddBookmarResponse
 */
export class AddBookmarResponse extends Message<AddBookmarResponse> {
  constructor(data?: PartialMessage<AddBookmarResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.AddBookmarResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddBookmarResponse {
    return new AddBookmarResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddBookmarResponse {
    return new AddBookmarResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddBookmarResponse {
    return new AddBookmarResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddBookmarResponse | PlainMessage<AddBookmarResponse> | undefined, b: AddBookmarResponse | PlainMessage<AddBookmarResponse> | undefined): boolean {
    return proto3.util.equals(AddBookmarResponse, a, b);
  }
}

