// @generated by protoc-gen-es v1.1.0 with parameter "target=ts"
// @generated from file v1/setting.proto (package v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message v1.SettingServiceGetAppearanceRequest
 */
export class SettingServiceGetAppearanceRequest extends Message<SettingServiceGetAppearanceRequest> {
  constructor(data?: PartialMessage<SettingServiceGetAppearanceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.SettingServiceGetAppearanceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SettingServiceGetAppearanceRequest {
    return new SettingServiceGetAppearanceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SettingServiceGetAppearanceRequest {
    return new SettingServiceGetAppearanceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SettingServiceGetAppearanceRequest {
    return new SettingServiceGetAppearanceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SettingServiceGetAppearanceRequest | PlainMessage<SettingServiceGetAppearanceRequest> | undefined, b: SettingServiceGetAppearanceRequest | PlainMessage<SettingServiceGetAppearanceRequest> | undefined): boolean {
    return proto3.util.equals(SettingServiceGetAppearanceRequest, a, b);
  }
}

/**
 * @generated from message v1.SettingServiceGetAppearanceResponse
 */
export class SettingServiceGetAppearanceResponse extends Message<SettingServiceGetAppearanceResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<SettingServiceGetAppearanceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.SettingServiceGetAppearanceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SettingServiceGetAppearanceResponse {
    return new SettingServiceGetAppearanceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SettingServiceGetAppearanceResponse {
    return new SettingServiceGetAppearanceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SettingServiceGetAppearanceResponse {
    return new SettingServiceGetAppearanceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SettingServiceGetAppearanceResponse | PlainMessage<SettingServiceGetAppearanceResponse> | undefined, b: SettingServiceGetAppearanceResponse | PlainMessage<SettingServiceGetAppearanceResponse> | undefined): boolean {
    return proto3.util.equals(SettingServiceGetAppearanceResponse, a, b);
  }
}

