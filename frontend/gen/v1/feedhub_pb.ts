// @generated by protoc-gen-es v1.1.0 with parameter "target=ts,import_extension="
// @generated from file v1/feedhub.proto (package v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message v1.AddFeedRequest
 */
export class AddFeedRequest extends Message<AddFeedRequest> {
  constructor(data?: PartialMessage<AddFeedRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.AddFeedRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddFeedRequest {
    return new AddFeedRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddFeedRequest {
    return new AddFeedRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddFeedRequest {
    return new AddFeedRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddFeedRequest | PlainMessage<AddFeedRequest> | undefined, b: AddFeedRequest | PlainMessage<AddFeedRequest> | undefined): boolean {
    return proto3.util.equals(AddFeedRequest, a, b);
  }
}

/**
 * @generated from message v1.AddFeedResponse
 */
export class AddFeedResponse extends Message<AddFeedResponse> {
  constructor(data?: PartialMessage<AddFeedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.AddFeedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddFeedResponse {
    return new AddFeedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddFeedResponse {
    return new AddFeedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddFeedResponse {
    return new AddFeedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddFeedResponse | PlainMessage<AddFeedResponse> | undefined, b: AddFeedResponse | PlainMessage<AddFeedResponse> | undefined): boolean {
    return proto3.util.equals(AddFeedResponse, a, b);
  }
}

/**
 * @generated from message v1.RemoveFeedRequest
 */
export class RemoveFeedRequest extends Message<RemoveFeedRequest> {
  constructor(data?: PartialMessage<RemoveFeedRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RemoveFeedRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFeedRequest {
    return new RemoveFeedRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFeedRequest {
    return new RemoveFeedRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFeedRequest {
    return new RemoveFeedRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveFeedRequest | PlainMessage<RemoveFeedRequest> | undefined, b: RemoveFeedRequest | PlainMessage<RemoveFeedRequest> | undefined): boolean {
    return proto3.util.equals(RemoveFeedRequest, a, b);
  }
}

/**
 * @generated from message v1.RemoveFeedResponse
 */
export class RemoveFeedResponse extends Message<RemoveFeedResponse> {
  constructor(data?: PartialMessage<RemoveFeedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RemoveFeedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveFeedResponse {
    return new RemoveFeedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveFeedResponse {
    return new RemoveFeedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveFeedResponse {
    return new RemoveFeedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveFeedResponse | PlainMessage<RemoveFeedResponse> | undefined, b: RemoveFeedResponse | PlainMessage<RemoveFeedResponse> | undefined): boolean {
    return proto3.util.equals(RemoveFeedResponse, a, b);
  }
}

