syntax = "proto3";

package v1;

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

message ListFeedsRequest {
  int32 page = 1 [(validate.rules).int32.gte = 0];
}
message ListFeedsResponse {
  int32 page = 1;
  message Item {
    string id = 1;
    string name = 2;
    string url = 3;
  }
  repeated Item items = 2;
}

message AddFeedRequest {
  string url = 1 [(validate.rules).string.min_len = 1];
  string name = 2 [(validate.rules).string.min_len = 1];
}
message AddFeedResponse {
  string id = 1;
}

message GetFeedRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
}
message GetFeedResponse {
  string id = 1;
  string url = 2;
  string name = 3;
  google.protobuf.Timestamp lastfetch = 4;
  google.protobuf.Timestamp created = 5;
  google.protobuf.Timestamp modified = 6;
}

message ListItemsRequest {
  string id = 1;
  int32 page = 2 [(validate.rules).int32.gte = 0];
}
message ListItemsResponse {
  int32 page = 1;
  message Item {
    string id = 1;
    string name = 2;
    string url = 3;
    // map<string, string> attributes = 2; // includes url, title, description... 
  }
  repeated Item items = 2;
}

message GetAppearanceRequest {}
message GetAppearanceResponse {
  message AttributePlace {
    string attribute = 1;
    enum Place {
      THUMBNAIL = 0;
      LINK = 1;
      TITLE = 2;
      DESCRIPTION = 3;
      SUBTITLE = 4;
      SUBLINK = 5;
    }
    Place place = 7;
  }
  repeated AttributePlace places = 1;
}

message UpdateAppearanceRequest {
  message AttributePlace {
    string attribute = 1 [(validate.rules).string.min_len = 1];
    enum Place {
      THUMBNAIL = 0;
      LINK = 1;
      TITLE = 2;
      DESCRIPTION = 3;
      SUBTITLE = 4;
      SUBLINK = 5;
    }
    Place place = 2 [(validate.rules).enum.defined_only = true];
  }
  repeated AttributePlace places = 1 [(validate.rules).repeated = {min_items: 0, max_items: 10}];
}
message UpdateAppearanceResponse {}

message FetchRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
}
message FetchResponse {}

message DeleteFeedRequest {
  string id = 1 [(validate.rules).string.min_len = 1];
}
message DeleteFeedResponse {}

service Feed {
  rpc ListFeeds(ListFeedsRequest) returns (ListFeedsResponse) {}
  rpc AddFeed(AddFeedRequest) returns (AddFeedResponse) {}
  rpc GetFeed(GetFeedRequest) returns (GetFeedResponse) {}
  rpc ListItems(ListItemsRequest) returns (ListItemsResponse) {}
  rpc GetAppearance(GetAppearanceRequest) returns (GetAppearanceResponse) {}
  rpc UpdateAppearance(UpdateAppearanceRequest) returns (UpdateAppearanceResponse) {}
  rpc Fetch(FetchRequest) returns (FetchResponse) {}
  rpc DeleteFeed(DeleteFeedRequest) returns (DeleteFeedResponse) {}
}
