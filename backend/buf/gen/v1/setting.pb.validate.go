// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: v1/setting.proto

package v1

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"sort"
	"strings"
	"time"
	"unicode/utf8"

	"google.golang.org/protobuf/types/known/anypb"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = anypb.Any{}
	_ = sort.Sort
)

// Validate checks the field values on SettingGetAppearanceRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *SettingGetAppearanceRequest) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on SettingGetAppearanceRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// SettingGetAppearanceRequestMultiError, or nil if none found.
func (m *SettingGetAppearanceRequest) ValidateAll() error {
	return m.validate(true)
}

func (m *SettingGetAppearanceRequest) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return SettingGetAppearanceRequestMultiError(errors)
	}

	return nil
}

// SettingGetAppearanceRequestMultiError is an error wrapping multiple
// validation errors returned by SettingGetAppearanceRequest.ValidateAll() if
// the designated constraints aren't met.
type SettingGetAppearanceRequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m SettingGetAppearanceRequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m SettingGetAppearanceRequestMultiError) AllErrors() []error { return m }

// SettingGetAppearanceRequestValidationError is the validation error returned
// by SettingGetAppearanceRequest.Validate if the designated constraints
// aren't met.
type SettingGetAppearanceRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SettingGetAppearanceRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SettingGetAppearanceRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SettingGetAppearanceRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SettingGetAppearanceRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SettingGetAppearanceRequestValidationError) ErrorName() string {
	return "SettingGetAppearanceRequestValidationError"
}

// Error satisfies the builtin error interface
func (e SettingGetAppearanceRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSettingGetAppearanceRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SettingGetAppearanceRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SettingGetAppearanceRequestValidationError{}

// Validate checks the field values on SettingGetAppearanceResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *SettingGetAppearanceResponse) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on SettingGetAppearanceResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// SettingGetAppearanceResponseMultiError, or nil if none found.
func (m *SettingGetAppearanceResponse) ValidateAll() error {
	return m.validate(true)
}

func (m *SettingGetAppearanceResponse) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Message

	if len(errors) > 0 {
		return SettingGetAppearanceResponseMultiError(errors)
	}

	return nil
}

// SettingGetAppearanceResponseMultiError is an error wrapping multiple
// validation errors returned by SettingGetAppearanceResponse.ValidateAll() if
// the designated constraints aren't met.
type SettingGetAppearanceResponseMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m SettingGetAppearanceResponseMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m SettingGetAppearanceResponseMultiError) AllErrors() []error { return m }

// SettingGetAppearanceResponseValidationError is the validation error returned
// by SettingGetAppearanceResponse.Validate if the designated constraints
// aren't met.
type SettingGetAppearanceResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SettingGetAppearanceResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SettingGetAppearanceResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SettingGetAppearanceResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SettingGetAppearanceResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SettingGetAppearanceResponseValidationError) ErrorName() string {
	return "SettingGetAppearanceResponseValidationError"
}

// Error satisfies the builtin error interface
func (e SettingGetAppearanceResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSettingGetAppearanceResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SettingGetAppearanceResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SettingGetAppearanceResponseValidationError{}

// Validate checks the field values on SettingPutAppearanceRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *SettingPutAppearanceRequest) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on SettingPutAppearanceRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// SettingPutAppearanceRequestMultiError, or nil if none found.
func (m *SettingPutAppearanceRequest) ValidateAll() error {
	return m.validate(true)
}

func (m *SettingPutAppearanceRequest) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if utf8.RuneCountInString(m.GetMessage()) < 1 {
		err := SettingPutAppearanceRequestValidationError{
			field:  "Message",
			reason: "value length must be at least 1 runes",
		}
		if !all {
			return err
		}
		errors = append(errors, err)
	}

	if len(errors) > 0 {
		return SettingPutAppearanceRequestMultiError(errors)
	}

	return nil
}

// SettingPutAppearanceRequestMultiError is an error wrapping multiple
// validation errors returned by SettingPutAppearanceRequest.ValidateAll() if
// the designated constraints aren't met.
type SettingPutAppearanceRequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m SettingPutAppearanceRequestMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m SettingPutAppearanceRequestMultiError) AllErrors() []error { return m }

// SettingPutAppearanceRequestValidationError is the validation error returned
// by SettingPutAppearanceRequest.Validate if the designated constraints
// aren't met.
type SettingPutAppearanceRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SettingPutAppearanceRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SettingPutAppearanceRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SettingPutAppearanceRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SettingPutAppearanceRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SettingPutAppearanceRequestValidationError) ErrorName() string {
	return "SettingPutAppearanceRequestValidationError"
}

// Error satisfies the builtin error interface
func (e SettingPutAppearanceRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSettingPutAppearanceRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SettingPutAppearanceRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SettingPutAppearanceRequestValidationError{}

// Validate checks the field values on SettingPutAppearanceResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *SettingPutAppearanceResponse) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on SettingPutAppearanceResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// SettingPutAppearanceResponseMultiError, or nil if none found.
func (m *SettingPutAppearanceResponse) ValidateAll() error {
	return m.validate(true)
}

func (m *SettingPutAppearanceResponse) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return SettingPutAppearanceResponseMultiError(errors)
	}

	return nil
}

// SettingPutAppearanceResponseMultiError is an error wrapping multiple
// validation errors returned by SettingPutAppearanceResponse.ValidateAll() if
// the designated constraints aren't met.
type SettingPutAppearanceResponseMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m SettingPutAppearanceResponseMultiError) Error() string {
	var msgs []string
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m SettingPutAppearanceResponseMultiError) AllErrors() []error { return m }

// SettingPutAppearanceResponseValidationError is the validation error returned
// by SettingPutAppearanceResponse.Validate if the designated constraints
// aren't met.
type SettingPutAppearanceResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SettingPutAppearanceResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SettingPutAppearanceResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SettingPutAppearanceResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SettingPutAppearanceResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SettingPutAppearanceResponseValidationError) ErrorName() string {
	return "SettingPutAppearanceResponseValidationError"
}

// Error satisfies the builtin error interface
func (e SettingPutAppearanceResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSettingPutAppearanceResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SettingPutAppearanceResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SettingPutAppearanceResponseValidationError{}
